name: Supabase Keep-Alive

on:
  schedule:
    # Runs every Monday at 5:30 UTC. Supabase free tier pauses after 7 days of inactivity.
    - cron: '30 5 * * 1'
  workflow_dispatch:
    # Allows manual triggering from the Actions tab for testing.

jobs:
  ping-supabase:
    runs-on: ubuntu-latest
    steps:
      - name: Ping Supabase Database
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          echo "Starting Supabase keep-alive task..."
          echo "Pinging target: ${SUPABASE_URL}"
          
          # Build the correct Supabase REST API URL
          API_URL="${SUPABASE_URL}/rest/v1/keep_alive_pings?select=*&limit=1"
          echo "API URL: ${API_URL}"
          
          # Perform a GET request to generate database activity
          response=$(curl -s -w "%{http_code}" \
            --request GET \
            --url "${API_URL}" \
            --header "apikey: ${SUPABASE_ANON_KEY}" \
            --header "Authorization: Bearer ${SUPABASE_ANON_KEY}")
          
          # Extract HTTP status code more reliably
          http_code=${response: -3}
          
          if [ "$http_code" -eq 200 ]; then
            echo "✅ Success! Supabase project is active. (HTTP $http_code)"
          elif [ "$http_code" -eq 404 ]; then
            echo "❌ Error: The 'keep_alive_pings' table was not found. (HTTP $http_code)"
            echo "Please run the required SQL setup script in your Supabase project."
            exit 1
          else
            echo "❌ An unexpected error occurred. (HTTP $http_code)"
            echo "Response: $response"
            echo "Please check your SUPABASE_URL and SUPABASE_ANON_KEY secrets."
            exit 1
          fi